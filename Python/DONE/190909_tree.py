## 첫 줄에는 트리의 정점의 총 수 V가 주어진다. 그 다음 줄에는 V-1개 간선이 나열된다.
## 간선은 그것을 이루는 두 정점으로 표기된다. 간선은 항상 '부모-자식' 순서로 표기된다.
## 아래 예에서 두 번째 줄 처음 1과 2는 정점 1과 2를 잇는 간선을 의미하며 1이 부모, 2가 자식을 의미한다.
## 간선은 부모 정점 번호가 작은 것부터 나열되고, 부모 정점이 동일하다면 자식 정점 번호가 작은 것부터 나열된다.

## 다음 이진 트리 표현에 대하여 전위 순회하여 정점의 번호를 출력하시오.
## 13(정점의 개수)
## 1 2 1 3 2 4 3 5 3 6 4 7 5 8 5 9 6 10 6 11 7 12 11 13

def preorder(n):
    print(n, end= ' ')
    if edges[n][0]:
        preorder(edges[n][0])
    if edges[n][1]:
        preorder(edges[n][1])


V = 13
E = '1 2 1 3 2 4 3 5 3 6 4 7 5 8 5 9 6 10 6 11 7 12 11 13'
info = list(map(int, E.split()))
edges = [[0, 0] for _ in range(14)]
for i in range(0, len(info), 2):
    if edges[info[i]][0] == 0:
        edges[info[i]][0] = info[i+1]
    else:
        edges[info[i]][1] = info[i + 1]
## [[], [2, 3], [4], [5, 6], [7], [8, 9], [10, 11], [12], [], [], [], [13], [], []]
## [[0, 0], [2, 3], [4, 0], [5, 6], [7, 0], [8, 9], [10, 11], [12, 0], [0, 0], [0, 0], [0, 0], [13, 0], [0, 0], [0, 0]]
preorder(1)
